// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: comment.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const listCommentsByPostID = `-- name: ListCommentsByPostID :many
SELECT c.id, c.user_id, c.content, c.created_at
FROM comments c
LEFT JOIN posts p on c.post_id = p.id
WHERE p.id = $1
`

type ListCommentsByPostIDRow struct {
	ID        pgtype.UUID
	UserID    pgtype.UUID
	Content   string
	CreatedAt pgtype.Timestamp
}

func (q *Queries) ListCommentsByPostID(ctx context.Context, id pgtype.UUID) ([]ListCommentsByPostIDRow, error) {
	rows, err := q.db.Query(ctx, listCommentsByPostID, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListCommentsByPostIDRow
	for rows.Next() {
		var i ListCommentsByPostIDRow
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.Content,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
